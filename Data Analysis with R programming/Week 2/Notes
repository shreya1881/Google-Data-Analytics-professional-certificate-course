-> Functions are a body of reusable code used to perform specific tasks in R. Functions begin with function names like print or paste, and are usually followed by one
   or more arguments in parentheses. An argument is information that a function in R needs in order to run. 

-> A variable is a representation of a value in R that can be stored for use later during programming. Variables can also be called objects. As a data analyst, you'll
   find variables are very useful when programming. 
   
-> A pipe is a tool in R for expressing a sequence of multiple operations. A pipe is represented by a % sign, followed by a > sign, and another % sign. It's used to 
   apply the output of one function into another function. Pipes can make your code easier to read and understand. 
   
-> Fundamentals of R programming:
   1. Functions
   2. Comments
   3. Variables
   4. Vectors
   5. Pipe
   6. Data Types

->  The most common data structures in the R programming language include: 

      Vectors

      Data frames

      Matrices

      Arrays

-> Assignment operators are used to assign values to variables and vectors.
   
   Arithmetic operators. These operators are used to complete math calculations and they might seem familiar. Plus signs do addition on variables, and minus signs 
   do subtraction. We use an asterisk to perform multiplication and a slash performs division.

-> One of the most commonly used sources of packages is CRAN. CRAN stands for Comprehensive R Archives Network. It's an online archive with R packages, source code,
   manuals and documentation. 

-> Packages offer a helpful combination of code, reusable R functions, descriptive documentation, tests for checking operability, and sample data sets. And for 
   lots of data analysts.
   
-> Tidyverse is actually a collection of packages in R with a common design philosophy for data manipulation, exploration, and visualization. Using tidyverse can 
   help you work your way through pretty much the entire data analysis process. The packages in tidyverse work together naturally. 
   
-> Conflicts happen when packages have functions with the same names as other functions. 

-> Ggplot2 is used for data visualization, specifically plots. With ggplot2, you can create a variety of data viz by applying different visual properties to the 
   data variables. Here's an example of ggplot2 in action. You'll have your own chance to use ggplot2 later. 
   
   Tidyr is a package used for data cleaning to make tidy data. We covered tidy or clean data earlier, but as a quick reminder, it's data where every part of a 
   data table or data frame is the right type in the right place. Tidyr works with wide and long data to make sure this happens. 
   
   Next, we have readr, which is used for importing data. The most common function from readr is read_csv. This will import a CSV file into R. A CSV file contains 
   data separated by commas in a table format. To accurately read a dataset with readr, you combine the function with a column specification. The column 
   specification describes how each column should be converted to the most appropriate data type.
   
   Dplyr offers a consistent set of functions that help you complete some common data manipulation tasks. For example, the select function picks variables based on
   their names, and the filter function finds cases where certain conditions are true. And, yes, dplyr is another package we'll get to later. 
   
   Tibble works with data frames. 
   
   Purrr works with functions and vectors helping make your code easier to write and more expressive. 
   
   Stringr includes functions that make it easier to work with strings.

   Forcats provides tools that solve common problems with factors. As a quick reminder, factors store categorical data in R where the data values are limited and
   usually based on a finite group like country or year.
   
-> Factors store categorical data in R where the data values are limited and usually based on a finite group like country or year. 
